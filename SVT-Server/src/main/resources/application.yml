# ===================================================================
# SVT Application Default Configuration
# ===================================================================
#
# 这是所有环境共享的基础配置文件.
# 特定于环境的配置 (如数据库连接、服务器端口、密钥等)
# 必须在对应的 application-{profile}.yml 文件中定义.
#

# ----------------------------------------
# 服务器通用配置
# ----------------------------------------
server:
  # 端口在各环境文件中指定
  servlet:
    context-path: /api
    encoding:
      charset: UTF-8
      force: true
      enabled: true
  tomcat:
    max-threads: 200
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000

# ----------------------------------------
# 应用信息配置
# ----------------------------------------
app:
  version: 1.0.0

# ----------------------------------------
# Spring Boot 基础配置
# ----------------------------------------
spring:
  # 应用名称
  application:
    name: svt-management-system

  # 默认激活 'dev' 环境
  # 可通过启动参数覆盖, 例如: --spring.profiles.active=prod
  profiles:
    active: dev

  # Jackson 全局配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
      enabled: true
      
  # 数据源通用配置 (Druid)
  # 具体连接URL、用户名、密码在环境文件中指定
  datasource:
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # Druid 过滤器
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 2000
        wall:
          enabled: true
          config:
            multi-statement-allow: true

  # Redis 通用配置
  # 具体主机、端口、密码、数据库在环境文件中指定
  data:
    redis:
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

# ----------------------------------------
# MyBatis-Flex 通用配置
# ----------------------------------------
mybatis-flex:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.seventeen.svt.modules.*.entity
  global-config:
    print-banner: true
    db-config:
      key-type: auto
      logic-delete-column: del_flag
      version-column: version
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    lazy-loading-enabled: true
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

# ----------------------------------------
# API文档通用配置 (Knife4j & SpringDoc)
# ----------------------------------------
# 启用/禁用状态在环境文件中指定
knife4j:
  setting:
    language: zh_cn
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  packages-to-scan: com.seventeen.svt

# ----------------------------------------
# 日志通用配置
# ----------------------------------------
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{traceId}] %-5level %logger{36} - %msg%n"
  config: classpath:config/log4j2-spring.xml

# ----------------------------------------
# 事务管理通用配置
# ----------------------------------------
transaction:
  monitor:
    enabled: true
  prefix:
    readonly: [get, query, find, list, count, exist, search, fetch, select]
    required: [add, save, insert, update, modify, delete, remove, batch]

# ----------------------------------------
# SVT 核心业务配置
# ----------------------------------------
svt:
  # 安全相关配置
  security:
    aes:
      key: ${SVT_AES_KEY}
    sm4:
      key: ${SVT_SM4_KEY}

# JWT 令牌配置
# secret 和 expiration 必须在特定环境的 application-{profile}.yml 文件中提供
jwt:
  secret: ${SVT_JWT_SECRET}
  expiration: ${SVT_JWT_EXPIRATION} # in seconds
  issuer: svt-issuer
  refresh-threshold-seconds: ${SVT_JWT_REFRESH_THRESHOLD} # in seconds

# ----------------------------------------
# 刷新阈值配置
# ----------------------------------------
# 1 hour in seconds
refresh-threshold-seconds: 3600 